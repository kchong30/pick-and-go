@using PickAndGo.ViewModels
@model IEnumerable<ShoppingCartVM>


@{
    ViewData["Title"] = "Shopping Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int? customerId = Context.Session.GetInt32("customerId");
    int itemCount = 0;
    string cart = Context.Session.GetString("shoppingCart");
    if (!string.IsNullOrEmpty(cart) && cart != "[]")
    {
        itemCount = cart.Split(',').Length;
    }

}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<main class="shopping-cart">
    <div class="justify-content-center align-items-center ">
        <div>
            <div class="shopping-title">
                <h1>Shopping Cart</h1>
            </div>
            @if (itemCount > 0)
            {
                <div class="container-fluid">
                    <table class="table text-start">
                        <thead>
                            <tr>
                                <th scope="col" class="col-1"></th>
                                <th scope="col" class="col-5">Sandwich</th>
                                <th scope="col" class="col-1">Price</th>
                                <th scope="col" class="col-1"></th>
                                <th scope="col" class="col-1"></th>
                                <th scope="col" class="col-1"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Select((value, index) => new { Value = value, Index = index }))
                            {
                                <tr class="ml-0 align-middle">

                                    <td class="col-1">
                                        <button class="accordion-button show" type="button" data-bs-toggle="collapse" data-bs-target="#@($"item-{item.Index}")" aria-expanded="false" aria-controls="@($"item-{item.Index}")">
                                        </button>
                                    </td>

                                    <td class="col-5">@item.Value.description</td>
                                    <td class="col-1"><span id="@item.Value.productId-amount" class="amount">$@Convert.ToDecimal(item.Value.subtotal).ToString("0.00")</span></td>
                                    <td class="col" colspan="3">
                                        <div class="button-box d-flex gap-4 fs-3 justify-content-center">
                                            <div class="shopping-cart-btn">
                                                <div class="cart-btn-info order">OrderAgain</div>
                                                <button class="order text-secondary" id="btnAgain" OnClick="orderAgain(@item.Index)"><i class="fa-solid fa-plus"></i></button>
                                                @*  <a class="order text-secondary" asp-route-index="@item.Index" asp-route-removeItem="again" asp-area="" asp-controller="Order" asp-action="EditCustomize"><i class="fa-solid fa-plus"></i></a>*@
                                            </div>
                                            <div class="shopping-cart-btn">
                                                <div class="cart-btn-info">Edit</div>
                                                <a class="edit text-secondary" asp-route-index="@item.Index" asp-route-removeitem="edit" asp-area="" asp-controller="Order" asp-action="EditCustomize"><i class="fa-solid fa-pen-to-square"></i></a>
                                            </div>
                                            <div class="shopping-cart-btn">
                                                <div class="cart-btn-info">Remove</div>
                                                <button class="remove text-danger" id="btnRemove" OnClick="removeSandwich(@item.Index)"><i class="fa-regular fa-trash-can"></i></button>
                                            </div>
                                            @*             <div class="dropdown">
                                    <button class="dropbtn">Order Options</button>
                                    <div class="dropdown-content">
                                    <a class="btn btn-primary shopping-cart-dropdown-btn" asp-route-index="@item.Index" asp-route-removeItem="again" asp-area="" asp-controller="Order" asp-action="EditCustomize">Order Again</a>
                                    <a class="btn btn-primary shopping-cart-dropdown-btn" asp-route-index="@item.Index" asp-route-removeitem="edit" asp-area="" asp-controller="Order" asp-action="EditCustomize">Edit</a>
                                    <button class="btn btn-danger shopping-cart-dropdown-btn" id="btnRemove" OnClick="removeSandwich(@item.Index)">Remove</button>
                                    </div>
                                    </div>*@
                                        </div>
                                    </td>
                                </tr>
                                <tr id="@($"item-{item.Index}")" class="accordion-collapse collapse show col-md" aria-labelledby="@item.Value.productId">
                                    <td colspan="12">
                                        <table class="accordion-table ingredient-dropdown">
                                            <thead>
                                                <tr>
                                                    <th scope="col" class="col-4">Ingredient</th>
                                                    <th scope="col" class="col-3">Quantity</th>
                                                    <th scope="col" class="col-4">Sub Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td class="col-4">Base sandwich price</td>
                                                    <td class="col-2">N/A</td>
                                                    <td class="col-2">$@(Convert.ToDouble(item.Value.productPrice).ToString("0.00"))</td>

                                                </tr>
                                                @foreach (var ingredient in item.Value.ingredients)
                                                {
                                                    decimal price = (Convert.ToDecimal(ingredient.price) * Convert.ToDecimal(ingredient.quantity));
                                                    <tr>
                                                        <td class="col-4">@ingredient.description</td>
                                                        @if (ingredient.quantity == "1")
                                                        {
                                                            <td class="col-1">Regular</td>
                                                        }
                                                        else
                                                        {
                                                            <td class="col-1">Extra</td>
                                                        }
                                                        <td class="col-1">$@price.ToString("0.00")</td>
                                                        <td class="col-6"></td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>

                                    </td>

                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
                <footer>

                    <div class="d-flex justify-content-end total-price">
                        <label>Total: $</label>
                        <span id="totalAmount">0</span>
                        <input id="currency" hidden value="CAD" />
                    </div>
                    <div class="d-flex justify-content-end my-3">
                        @{
                            var dataTargetConfirm = "#ModalYes";
                            var modalID = "ModalYes";
                        }
                        <a class="btn btn-primary add-sandwich-button" asp-controller="Order" asp-action="Index">Start New Sandwich</a>
                        <button type="button" class="btn btn-primary btn-sm proceed-button ms-5" data-bs-toggle="modal" data-bs-target="@dataTargetConfirm">Proceed</button>

                        <!-- Modal -->
                        <div class="modal fade" id=@modalID tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="confirmModalLabel">Checkout and Pay</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">

                                        <div>

                                            <h4>Pick up time</h4>
                                            <select id="pickupTime" name="pickupTime" required>
                                                @{
                                                    // Get the time after 20mins from current time
                                                    var currentTime = DateTime.Now;
                                                    var timeToAdd = new TimeSpan(0, 20, 0);
                                                    var pickupTime = currentTime.Add(timeToAdd);

                                                    // round up the time per 20mins
                                                    var roundedTime = new DateTime(pickupTime.Year, pickupTime.Month, pickupTime.Day, pickupTime.Hour, (pickupTime.Minute / 20) * 20, 0);

                                                    // set business hour (9-22) and create a dropdown list between the time
                                                    if (roundedTime.Hour >= 9 && roundedTime.Hour < 22)
                                                    {
                                                        // loop eace 20mins until 22
                                                        for (var j = roundedTime; j <= new DateTime(roundedTime.Year, roundedTime.Month, roundedTime.Day, 22, 0, 0); j = j.AddMinutes(20))
                                                        {
                                                            <option value="@j.ToString("yyyy-MM-ddTHH:mm:ss")">@j.ToString("h:mm tt")</option>
                                                        }
                                                    }
                                                    // if the time is not between 9 to 22, show we are closed
                                                    else
                                                    {
                                                        <option value="">Sorry, We are closed!</option>
                                                    }
                                                }
                                            </select>
                                            <br />
                                            <br />
                                        </div>
                                        @if (customerId == null)
                                        {
                                            <h4> Please provide your first name and email address for a receipt</h4>
                                            <label for="first-name">First Name</label>
                                            <input id="first-name" type="text" class="form-control" name="first-name" required>

                                            <label for="email">Email address</label>
                                            <input id="email" type="email" class="form-control" name="email" required pattern="^[a-zA-Z0-9._+-]+@("@")[a-zA-Z0-9.-]+\.[a-zA-Z]{2,9}$">
                                        }
                                        <br />
                                    </div>
                                    <div class="modal-footer">
                                        <div class="mt-3" id="paypal-button">@Html.Partial("PayPalJS")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </footer>
            }
            else
            {
                <div class="container-fluid">
                    <div class="container mt-5">
                        <div class="jumbotron text-center">
                            <h1 class="display-6">Your shopping cart is empty</h1>
                            <p class="lead">Please click the button to start an order.</p>
                            <a class="btn btn-dark" asp-controller="Order" asp-action="Index" role="button">Start Order</a>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
    <!-- Modal for cancellation -->
    <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelModalLabel">Transaction Canceled</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Your payment was canceled. Please try again.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for error -->
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="errorModalLabel">Transaction Failed</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Your payment could not be processed. Please try again.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</main>
<style>
    #paypal-button {
        display: none;
    }
</style>
<script>
    $(document).ready(function () {
        var totalAmountId = "#totalAmount";
        var totalAmount = 0.00;
        $('.amount').each(function () {
            var thisAmount = $(this).html().replace(/[^0-9.-]+/g, ""); // remove non-numeric characters
            totalAmount += parseFloat(thisAmount);
        });
        $(totalAmountId).html(totalAmount.toFixed(2));
    });

    $(document).ready(function () {
        // Hide the PayPal button initially
        $("#paypal-button").hide();

        // Add event listener to email and first name input fields
        $("#email, #first-name").on("input", function () {
            // Get the input values
            var email = $("#email").val();
            var firstName = $("#first-name").val();

            // Check if both inputs have values
            if (email && firstName) {
                // If both inputs have values, check if the email is valid
                if (/\S+@@\S+\.\S+/.test(email)) {
                    // If the email is valid, show the PayPal button
                    $("#paypal-button").show();
                } else {
                    // If the email is not valid, hide the PayPal button
                    $("#paypal-button").hide();
                }
            } else {
                // If either input is empty, hide the PayPal button
                $("#paypal-button").hide();
            }
        });

        // Check for customerId and show the PayPal button if customerId is present
        var customerId = '@customerId';
        console.log("customerID", customerId);
        if (customerId) {
            $("#paypal-button").show();
        }
    });

</script>

<script src="~/lib/jquery/dist/cart.js"></script>


